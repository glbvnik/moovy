{"version":3,"sources":["store/reducers/search/types.ts","store/reducers/search/index.ts","store/reducers/film/types.ts","store/reducers/film/index.ts","store/reducers/index.ts","routes/index.ts","store/index.ts","theme/theme.ts","components/MyAppBar.tsx","store/reducers/search/action-creators.ts","http/index.ts","services/film.ts","store/reducers/film/action-creators.ts","store/reducers/action-creators.ts","hooks/useAction.ts","hooks/useTyped.ts","styles/classes.ts","styles/filmSx.ts","components/FilmPage/FilmPageList.tsx","components/FilmPage/FilmPageHeader.tsx","components/Loader.tsx","pages/Film.tsx","styles/searchSx.ts","components/Search.tsx","styles/filmCardSx.ts","components/FilmCard.tsx","styles/filmListSx.ts","components/FilmList.tsx","components/ListPagination.tsx","components/ListStates.tsx","pages/Home.tsx","styles/mySelectSx.ts","components/MySelect.tsx","pages/Rated.tsx","components/AppRouter.tsx","App.tsx","index.tsx"],"names":["SearchActionEnum","FilmActionEnum","initialState","title","year","page","films","totalResults","film","ratedFilms","lastRatedFilm","genres","badRequest","loader","RouteNames","reducers","search","state","action","type","SET_TITLE","payload","SET_YEAR","SET_PAGE","SET_FILMS","SET_TOTAL_RESULTS","SET_CONCRETE_FILM","SET_RATED_FILMS","SET_LAST_RATED_FILM","SET_GENRES","SET_BAD_REQUEST","SET_LOADER","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","createTheme","typography","h1","color","fontSize","textAlign","marginBottom","h2","components","MuiTextField","styleOverrides","root","width","borderRadius","MuiPagination","padding","backgroundColor","MuiAppBar","MuiListItemSecondaryAction","maxWidth","MyAppBar","history","useHistory","AppBar","position","Toolbar","Button","startIcon","size","onClick","push","searchActionCreators","setTitle","setYear","setPage","setSearchState","dispatch","$api","axios","create","baseURL","FilmService","get","params","s","y","response","data","Search","imdbId","i","plot","length","map","rating","ratedFilm","find","rFilm","imdbID","filmsArr","some","f","updateRatedFilms","filter","filmActionCreators","setFilms","setTotalResults","setFilm","setRatedFilms","setLastRatedFilm","setGenres","setBadRequest","setLoader","fetchFilms","a","syncFilms","fetchFilm","fetchOneFilm","findFilm","setFilmRating","foundRatedFilm","newRatedFilms","deleteRatedFilm","foundFilm","addOrUpdatedRatedFilm","fetchedFilm","setCurrentGenres","Array","from","Set","Genre","split","flat","allActionCreators","useActions","useDispatch","bindActionCreators","useTypedSelector","useSelector","useClasses","makeStyles","wrapper","paddingTop","styles","mobileImage","image","content","list","borderBottom","lineHeight","marginTop","ratingBox","normalContainer","FilmPageList","List","sx","ListItem","disableGutters","secondaryAction","Year","ListItemText","Country","className","Runtime","Director","Actors","imdbRating","FilmPageHeader","handleRatingChange","Box","hasOwnProperty","Rating","onChange","value","Typography","variant","Title","Loader","Grid","container","alignItems","justifyContent","flexGrow","CircularProgress","Film","useParams","useEffect","_","isMedium","useMediaQuery","isLarge","classes","direction","undefined","item","xs","sm","md","lg","flexDirection","src","Poster","alt","style","imageStyle","Paper","elevation","Plot","searchBar","borderBottomLeftRadius","borderBottomRightRadius","titleInput","borderTopLeftRadius","borderTopRightRadius","yearInput","borderLeft","buttonGroup","height","flex","searchBtn","resetBtn","handleSearch","useState","TextField","label","placeholder","e","target","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","views","maxDate","Date","renderInput","ButtonGroup","card","display","maxHeight","filmImage","cursor","overflow","contentWithGenre","filmName","filmYear","filmGenre","paddingBottom","paddingLeft","FilmCard","handleClick","Card","CardMedia","component","CardContent","grid","FilmList","LinearProgress","spacing","Math","random","ListPagination","handlePaginationClick","isSmall","Pagination","count","ceil","boundaryCount","ListStates","margin","Home","getFullYear","toString","formControl","marginLeft","MySelect","handleSelectChange","genre","setGenre","FormControl","InputLabel","id","Select","labelId","MenuItem","g","FormHelperText","Rated","memorizedFilms","useRef","updatedMemorizedFilms","current","newFilmsArr","includes","routes","path","HOME","exact","FILM","RATED","AppRouter","route","to","App","location","useLocation","window","scrollTo","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c00807.chunk.js","sourcesContent":["export interface SearchState {\n  title: string;\n  year: string;\n  page: number;\n}\n\nexport enum SearchActionEnum {\n  SET_TITLE = \"SET_TITLE\",\n  SET_YEAR = \"SET_YEAR\",\n  SET_PAGE = \"SET_PAGE\",\n}\n\nexport interface SetTitleAction {\n  type: SearchActionEnum.SET_TITLE;\n  payload: string;\n}\n\nexport interface SetYearAction {\n  type: SearchActionEnum.SET_YEAR;\n  payload: string;\n}\n\nexport interface SetPageAction {\n  type: SearchActionEnum.SET_PAGE;\n  payload: number;\n}\n\nexport type SearchAction = SetTitleAction | SetYearAction | SetPageAction;\n","import { SearchAction, SearchActionEnum, SearchState } from \"./types\";\n\nconst initialState: SearchState = {\n  title: \"\",\n  year: \"\",\n  page: 1,\n};\n\nexport default function SearchReducer(\n  state = initialState,\n  action: SearchAction\n): SearchState {\n  switch (action.type) {\n    case SearchActionEnum.SET_TITLE:\n      return { ...state, title: action.payload };\n\n    case SearchActionEnum.SET_YEAR:\n      return { ...state, year: action.payload };\n\n    case SearchActionEnum.SET_PAGE:\n      return { ...state, page: action.payload };\n\n    default:\n      return state;\n  }\n}\n","import { IFilm, IСoncreteFilm } from \"./../../../models/film\";\n\nexport interface FilmState {\n  films: IFilm[];\n  totalResults: number;\n  film: IСoncreteFilm;\n  ratedFilms: IСoncreteFilm[];\n  lastRatedFilm: IСoncreteFilm;\n  genres: string[];\n  badRequest: boolean;\n  loader: boolean;\n}\n\nexport enum FilmActionEnum {\n  SET_FILMS = \"SET_FILMS\",\n  SET_TOTAL_RESULTS = \"SET_TOTAL_RESULTS\",\n  SET_CONCRETE_FILM = \"SET_CONCRETE_FILM\",\n  SET_RATED_FILMS = \"SET_RATED_FILMS\",\n  SET_LAST_RATED_FILM = \"SET_LAST_RATED_FILM\",\n  SET_GENRES = \"SET_GENRES\",\n  SET_BAD_REQUEST = \"SET_BAD_REQUEST\",\n  SET_LOADER = \"SET_LOADER\",\n}\n\nexport interface SetFilmsAction {\n  type: FilmActionEnum.SET_FILMS;\n  payload: IFilm[];\n}\n\nexport interface SetTotalResultsAction {\n  type: FilmActionEnum.SET_TOTAL_RESULTS;\n  payload: number;\n}\n\nexport interface SetConcreteFilmAction {\n  type: FilmActionEnum.SET_CONCRETE_FILM;\n  payload: IСoncreteFilm;\n}\n\nexport interface SetRatedFilmsAction {\n  type: FilmActionEnum.SET_RATED_FILMS;\n  payload: IСoncreteFilm[];\n}\n\nexport interface SetLastRatedFilmAction {\n  type: FilmActionEnum.SET_LAST_RATED_FILM;\n  payload: IСoncreteFilm;\n}\n\nexport interface SetGenresAction {\n  type: FilmActionEnum.SET_GENRES;\n  payload: string[];\n}\n\nexport interface SetBadRequestAction {\n  type: FilmActionEnum.SET_BAD_REQUEST;\n  payload: boolean;\n}\n\nexport interface SetLoaderAction {\n  type: FilmActionEnum.SET_LOADER;\n  payload: boolean;\n}\n\nexport type FilmAction =\n  | SetFilmsAction\n  | SetTotalResultsAction\n  | SetConcreteFilmAction\n  | SetRatedFilmsAction\n  | SetLastRatedFilmAction\n  | SetGenresAction\n  | SetBadRequestAction\n  | SetLoaderAction;\n","import { FilmAction, FilmActionEnum, FilmState } from \"./types\";\nimport { IСoncreteFilm } from \"./../../../models/film\";\n\nconst initialState: FilmState = {\n  films: [],\n  totalResults: 0,\n  film: {} as IСoncreteFilm,\n  ratedFilms: [],\n  lastRatedFilm: {} as IСoncreteFilm,\n  genres: [],\n  badRequest: false,\n  loader: true,\n};\n\nexport default function FilmReducer(\n  state = initialState,\n  action: FilmAction\n): FilmState {\n  switch (action.type) {\n    case FilmActionEnum.SET_FILMS:\n      return { ...state, films: action.payload };\n\n    case FilmActionEnum.SET_TOTAL_RESULTS:\n      return { ...state, totalResults: action.payload };\n\n    case FilmActionEnum.SET_CONCRETE_FILM:\n      return { ...state, film: action.payload };\n\n    case FilmActionEnum.SET_RATED_FILMS:\n      return { ...state, ratedFilms: action.payload };\n\n    case FilmActionEnum.SET_LAST_RATED_FILM:\n      return { ...state, lastRatedFilm: action.payload };\n\n    case FilmActionEnum.SET_GENRES:\n      return { ...state, genres: action.payload };\n\n    case FilmActionEnum.SET_BAD_REQUEST:\n      return { ...state, badRequest: action.payload };\n\n    case FilmActionEnum.SET_LOADER:\n      return { ...state, loader: action.payload };\n\n    default:\n      return state;\n  }\n}\n","import search from \"./search\";\nimport film from \"./film\";\n\nconst reducers = { search, film };\n\nexport default reducers;\n","import { ComponentType } from \"react\";\nimport Film from \"../pages/Film\";\nimport Home from \"../pages/Home\";\nimport Rated from \"../pages/Rated\";\n\nexport interface IRoute {\n  path: string;\n  component: ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  HOME = \"/\",\n  FILM = \"/film/:imdbId\",\n  RATED = \"/rated\",\n}\n\nexport const routes: IRoute[] = [\n  { path: RouteNames.HOME, component: Home, exact: true },\n  { path: RouteNames.FILM, component: Film },\n  { path: RouteNames.RATED, component: Rated, exact: true },\n];\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  typography: {\n    h1: {\n      color: \"#152D35\",\n      fontSize: \"40px\",\n      textAlign: \"center\",\n      marginBottom: \"12px\",\n      \"@media (min-width: 900px)\": {\n        fontSize: \"50px\",\n      },\n      \"@media (min-width: 1200px)\": {\n        textAlign: \"left\",\n        marginBottom: \"0\",\n      },\n    },\n    h2: {\n      fontSize: \"32px\",\n      \"@media (min-width: 375px)\": {\n        fontSize: \"34px\",\n      },\n      \"@media (min-width: 414px)\": {\n        fontSize: \"30px\",\n      },\n      \"@media (min-width: 450px)\": {\n        fontSize: \"32px\",\n      },\n      \"@media (min-width: 500px)\": {\n        fontSize: \"34px\",\n      },\n      \"@media (min-width: 900px)\": {\n        fontSize: \"38px\",\n      },\n      \"@media (min-width: 1000px)\": {\n        fontSize: \"46px\",\n      },\n      \"@media (min-width: 1200px)\": {\n        fontSize: \"48px\",\n      },\n      \"@media (min-width: 2100px)\": {\n        fontSize: \"52px\",\n      },\n    },\n  },\n  components: {\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          width: \"100%\",\n          \"& .MuiFilledInput-root\": {\n            borderRadius: \"0\",\n          },\n          \"@media (min-width: 414px)\": {\n            \"& .MuiInputLabel-root, .MuiFilledInput-input\": {\n              fontSize: \"17px\",\n            },\n          },\n          \"@media (min-width: 900px)\": {\n            \"& .MuiInputLabel-root, .MuiFilledInput-input\": {\n              fontSize: \"18px\",\n            },\n          },\n          \"@media (min-width: 1500px)\": {\n            \"& .MuiInputLabel-root, .MuiFilledInput-input\": {\n              fontSize: \"19px\",\n            },\n          },\n          \"@media (min-width: 2100px)\": {\n            \"& .MuiInputLabel-root, .MuiFilledInput-input\": {\n              fontSize: \"20px\",\n            },\n          },\n        },\n      },\n    },\n    MuiPagination: {\n      styleOverrides: {\n        root: {\n          padding: \"14px 0 20px 0\",\n          \"& .Mui-selected\": {\n            backgroundColor: \"#D4ECDD !important\",\n          },\n          \"@media (min-width: 600px)\": {\n            padding: \"20px 0 26px 0\",\n          },\n          \"@media (min-width: 1000px)\": {\n            padding: \"28px 0 30px 0\",\n          },\n          \"@media (min-width: 1800px)\": {\n            padding: \"32px 0 34px 0\",\n          },\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          backgroundColor: \"#345B63\",\n          \"& .MuiSvgIcon-root, path\": {\n            color: \"#D4ECDD !important\",\n            fontSize: 28,\n          },\n          \"& .MuiButton-root\": {\n            color: \"#D4ECDD !important\",\n          },\n        },\n      },\n    },\n    MuiListItemSecondaryAction: {\n      styleOverrides: {\n        root: {\n          textAlign: \"end\",\n          maxWidth: \"80%\",\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React, { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppBar, Button, Toolbar } from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport HomeIcon from \"@mui/icons-material/Home\";\n\nconst MyAppBar: FC = () => {\n  const history = useHistory();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Button\n          startIcon={<HomeIcon />}\n          size=\"large\"\n          onClick={() => history.push(\"/\")}\n        >\n          Home\n        </Button>\n        <Button\n          startIcon={<StarIcon />}\n          size=\"large\"\n          onClick={() => history.push(\"/rated\")}\n        >\n          Rated films\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MyAppBar;\n","import {\n  SetTitleAction,\n  SearchActionEnum,\n  SetYearAction,\n  SetPageAction,\n} from \"./types\";\nimport { AppDispatch } from \"./../../index\";\n\nexport const searchActionCreators = {\n  setTitle: (payload: string): SetTitleAction => ({\n    type: SearchActionEnum.SET_TITLE,\n    payload,\n  }),\n  setYear: (payload: string): SetYearAction => ({\n    type: SearchActionEnum.SET_YEAR,\n    payload,\n  }),\n  setPage: (payload: number): SetPageAction => ({\n    type: SearchActionEnum.SET_PAGE,\n    payload,\n  }),\n  setSearchState:\n    (title: string, year = \"\") =>\n    (dispatch: AppDispatch) => {\n      dispatch(searchActionCreators.setTitle(title));\n      dispatch(searchActionCreators.setYear(year));\n      dispatch(searchActionCreators.setPage(1));\n    },\n};\n","import axios from \"axios\";\n\nexport const API_URL = \"http://www.omdbapi.com/?apikey=516f988\";\n\nconst $api = axios.create({\n  baseURL: API_URL,\n});\n\nexport default $api;\n","import $api from \"../http\";\nimport { IFilm, IFilmFetched, IСoncreteFilm } from \"./../models/film\";\n\nexport default class FilmService {\n  static async fetchFilms(title: string, year: string, page: number) {\n    const response = await $api.get<{\n      Search: IFilmFetched[];\n      totalResults: string;\n    }>(\"\", {\n      params: { s: title, y: year, page },\n    });\n\n    return [response.data.Search, response.data.totalResults];\n  }\n  static async fetchOneFilm(imdbId: string) {\n    const response = await $api.get<IСoncreteFilm>(\"\", {\n      params: { i: imdbId, plot: \"full\" },\n    });\n\n    return response.data;\n  }\n  // compares ratedFilms array and fetched films to set film ratings\n  static syncFilms(\n    films: IFilmFetched[],\n    ratedFilms: IFilm[] | IСoncreteFilm[]\n  ): IFilm[] {\n    if (ratedFilms.length === 0) {\n      return films.map((film) => ({ ...film, rating: null }));\n    }\n\n    return films.map((film) => {\n      const ratedFilm = ratedFilms.find(\n        (rFilm) => rFilm.imdbID === film.imdbID\n      );\n\n      if (ratedFilm) {\n        return { ...film, rating: ratedFilm!.rating };\n      }\n\n      return { ...film, rating: null };\n    });\n  }\n  static findFilm(filmsArr: IFilm[] | IСoncreteFilm[], imdbId: string) {\n    return filmsArr.find((film) => film.imdbID === imdbId);\n  }\n  static updateRatedFilms(\n    filmsArr: IСoncreteFilm[],\n    imdbId: string,\n    rating: number | null\n  ) {\n    return filmsArr.map((film) => {\n      if (film.imdbID === imdbId) {\n        return { ...film, rating };\n      }\n\n      return film;\n    });\n  }\n  static addOrUpdatedRatedFilm(\n    filmsArr: IСoncreteFilm[],\n    film: IFilm,\n    imdbId: string,\n    rating: number | null\n  ) {\n    let newRatedFilms;\n\n    if (!filmsArr.some((f) => f.imdbID === film.imdbID)) {\n      newRatedFilms = [...filmsArr, film];\n    } else {\n      newRatedFilms = FilmService.updateRatedFilms(filmsArr, imdbId, rating);\n    }\n\n    return newRatedFilms;\n  }\n  static deleteRatedFilm(filmsArr: IСoncreteFilm[], imdbId: string) {\n    return filmsArr.filter((film) => film.imdbID !== imdbId);\n  }\n}\n","import {\n  FilmActionEnum,\n  SetBadRequestAction,\n  SetConcreteFilmAction,\n  SetFilmsAction,\n  SetGenresAction,\n  SetLastRatedFilmAction,\n  SetLoaderAction,\n  SetRatedFilmsAction,\n  SetTotalResultsAction,\n} from \"./types\";\nimport { IFilm, IFilmFetched, IСoncreteFilm } from \"./../../../models/film\";\nimport { AppDispatch } from \"./../../index\";\nimport FilmService from \"../../../services/film\";\n\nexport const filmActionCreators = {\n  setFilms: (payload: IFilm[]): SetFilmsAction => ({\n    type: FilmActionEnum.SET_FILMS,\n    payload,\n  }),\n  setTotalResults: (payload: number): SetTotalResultsAction => ({\n    type: FilmActionEnum.SET_TOTAL_RESULTS,\n    payload,\n  }),\n  setFilm: (payload: IСoncreteFilm): SetConcreteFilmAction => ({\n    type: FilmActionEnum.SET_CONCRETE_FILM,\n    payload,\n  }),\n  setRatedFilms: (payload: IСoncreteFilm[]): SetRatedFilmsAction => ({\n    type: FilmActionEnum.SET_RATED_FILMS,\n    payload,\n  }),\n  setLastRatedFilm: (payload: IСoncreteFilm): SetLastRatedFilmAction => ({\n    type: FilmActionEnum.SET_LAST_RATED_FILM,\n    payload,\n  }),\n  setGenres: (payload: string[]): SetGenresAction => ({\n    type: FilmActionEnum.SET_GENRES,\n    payload,\n  }),\n  setBadRequest: (payload: boolean): SetBadRequestAction => ({\n    type: FilmActionEnum.SET_BAD_REQUEST,\n    payload,\n  }),\n  setLoader: (payload: boolean): SetLoaderAction => ({\n    type: FilmActionEnum.SET_LOADER,\n    payload,\n  }),\n  fetchFilms:\n    (title: string, year = \"\", page: number, ratedFilms: IСoncreteFilm[]) =>\n    async (dispatch: AppDispatch) => {\n      try {\n        const [films, totalResults] = await FilmService.fetchFilms(\n          title,\n          year,\n          page\n        );\n\n        dispatch(\n          filmActionCreators.setFilms(\n            FilmService.syncFilms(films as IFilmFetched[], ratedFilms)\n          )\n        );\n        dispatch(filmActionCreators.setTotalResults(+totalResults as number));\n        dispatch(filmActionCreators.setLoader(true));\n      } catch (e) {\n        dispatch(filmActionCreators.setFilms([]));\n        dispatch(filmActionCreators.setTotalResults(0));\n        dispatch(filmActionCreators.setBadRequest(true));\n        dispatch(filmActionCreators.setLoader(true));\n      }\n    },\n  fetchFilm:\n    (imdbId: string, ratedFilms: IСoncreteFilm[]) =>\n    async (dispatch: AppDispatch) => {\n      try {\n        dispatch(filmActionCreators.setLoader(false));\n\n        const film = await FilmService.fetchOneFilm(imdbId);\n\n        const ratedFilm = FilmService.findFilm(ratedFilms, imdbId);\n\n        if (ratedFilm) {\n          film.rating = ratedFilm.rating;\n        } else {\n          film.rating = null;\n        }\n\n        dispatch(filmActionCreators.setFilm(film));\n      } catch (e) {\n        dispatch(filmActionCreators.setLoader(true));\n      }\n    },\n  // this method sets films and ratedFilms arrays\n  setFilmRating:\n    (\n      films: IFilm[],\n      ratedFilms: IСoncreteFilm[],\n      imdbId: string,\n      rating: number | null\n    ) =>\n    async (dispatch: AppDispatch) => {\n      let newRatedFilms: IFilm[] | IСoncreteFilm[];\n\n      const foundRatedFilm = FilmService.findFilm(ratedFilms, imdbId);\n\n      if (foundRatedFilm) {\n        foundRatedFilm.rating = rating;\n        if (!rating) {\n          newRatedFilms = FilmService.deleteRatedFilm(ratedFilms, imdbId);\n        } else {\n          newRatedFilms = FilmService.updateRatedFilms(\n            ratedFilms,\n            imdbId,\n            rating\n          );\n        }\n\n        dispatch(\n          filmActionCreators.setFilms(\n            FilmService.syncFilms(films, newRatedFilms)\n          )\n        );\n\n        // set lastFilm state to adopt filtering\n        dispatch(\n          filmActionCreators.setLastRatedFilm(foundRatedFilm as IСoncreteFilm)\n        );\n      } else {\n        const foundFilm = FilmService.findFilm(films, imdbId);\n\n        if (foundFilm) {\n          foundFilm.rating = rating;\n\n          newRatedFilms = FilmService.addOrUpdatedRatedFilm(\n            ratedFilms,\n            foundFilm,\n            imdbId,\n            rating\n          );\n\n          dispatch(\n            filmActionCreators.setFilms(\n              FilmService.syncFilms(films, newRatedFilms)\n            )\n          );\n        }\n\n        const fetchedFilm = await FilmService.fetchOneFilm(imdbId);\n        fetchedFilm.rating = rating;\n\n        newRatedFilms = FilmService.addOrUpdatedRatedFilm(\n          ratedFilms,\n          fetchedFilm,\n          imdbId,\n          rating\n        );\n      }\n\n      dispatch(\n        filmActionCreators.setRatedFilms(newRatedFilms as IСoncreteFilm[])\n      );\n    },\n  setCurrentGenres:\n    (ratedFilms: IСoncreteFilm[]) => (dispatch: AppDispatch) => {\n      const genres = Array.from(\n        new Set(ratedFilms.map((film) => film.Genre.split(\", \")).flat())\n      );\n\n      dispatch(filmActionCreators.setGenres(genres));\n    },\n};\n","import { searchActionCreators } from \"./search/action-creators\";\nimport { filmActionCreators } from \"./film/action-creators\";\n\nexport const allActionCreators = {\n  ...searchActionCreators,\n  ...filmActionCreators,\n};\n","import { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport { allActionCreators } from \"../store/reducers/action-creators\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"./../store/index\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { makeStyles } from \"@mui/styles\";\n\nexport const useClasses = makeStyles({\n  wrapper: {\n    paddingTop: \"30px\",\n    \"@media (min-width: 500px)\": {\n      padding: \"0 40px\",\n    },\n    \"@media (min-width: 750px)\": {\n      padding: \"0 60px\",\n    },\n  },\n  maxWidth: {\n    maxWidth: \"1200px\",\n    \"@media (min-width: 2100px)\": {\n      maxWidth: \"1400px\",\n    },\n  },\n});\n","export const styles = {\n  mobileImage: {\n    width: \"100vw\",\n    marginBottom: \"4px\",\n    position: \"static\",\n  },\n  image: {\n    borderRadius: \"12px\",\n    width: \"100%\",\n    position: \"static\",\n  },\n  content: {\n    padding: \"10px\",\n  },\n  list: {\n    \"& li\": {\n      borderBottom: \"solid 1px #345B63\",\n      borderRadius: \"3%\",\n    },\n    \"& li, span\": {\n      padding: \"4px 0\",\n      fontSize: \"16px\",\n      \"@media (min-width: 414px)\": {\n        fontSize: \"11px\",\n      },\n      \"@media (min-width: 428px)\": {\n        fontSize: \"12px\",\n      },\n      \"@media (min-width: 450px)\": {\n        fontSize: \"13px\",\n      },\n      \"@media (min-width: 470px)\": {\n        padding: \"5px 0\",\n      },\n      \"@media (min-width: 520px)\": {\n        padding: \"6px 0\",\n      },\n      \"@media (min-width: 540px)\": {\n        fontSize: \"14px\",\n      },\n      \"@media (min-width: 750px)\": {\n        fontSize: \"15px\",\n      },\n      \"@media (min-width: 900px)\": {\n        fontSize: \"19px\",\n      },\n      \"@media (min-width: 1000px)\": {\n        fontSize: \"20px\",\n      },\n      \"@media (min-width: 1200px)\": {\n        fontSize: \"16px\",\n      },\n      \"@media (min-width: 2100px)\": {\n        fontSize: \"21px\",\n      },\n    },\n    \"@media (min-width: 414px)\": {\n      padding: \"0 0 0 10px\",\n    },\n    \"@media (min-width: 600px)\": {\n      padding: 0,\n    },\n  },\n  plot: {\n    fontSize: \"18px\",\n    lineHeight: 1.5,\n    \"@media (min-width: 375px)\": {\n      fontSize: \"19px\",\n      lineHeight: 1.6,\n    },\n    \"@media (min-width: 414px)\": {\n      padding: \"14px 4px\",\n    },\n    \"@media (min-width: 500px)\": {\n      fontSize: \"21px\",\n      lineHeight: 1.8,\n    },\n    \"@media (min-width: 600px)\": {\n      fontSize: \"20px\",\n      marginTop: \"30px\",\n      padding: 0,\n    },\n    \"@media (min-width: 900px)\": {\n      fontSize: \"22px\",\n      lineHeight: 1.9,\n    },\n    \"@media (min-width: 1000px)\": {\n      fontSize: \"23px\",\n      lineHeight: 2,\n    },\n    \"@media (min-width: 2100px)\": {\n      fontSize: \"25px\",\n    },\n  },\n  ratingBox: {\n    marginTop: \"2px\",\n    marginBottom: \"10px\",\n    \"& .MuiRating-icon\": {\n      fontSize: \"30px\",\n    },\n    \"@media (min-width: 414px)\": {\n      marginTop: \"4px\",\n      \"& .MuiRating-icon\": {\n        fontSize: \"34px\",\n      },\n    },\n    \"@media (min-width: 428px)\": {\n      \"& .MuiRating-icon\": {\n        fontSize: \"36px\",\n      },\n    },\n    \"@media (min-width: 500px)\": {\n      \"& .MuiRating-icon\": {\n        fontSize: \"40px\",\n      },\n    },\n    \"@media (min-width: 600px)\": {\n      marginBottom: \"16px\",\n    },\n    \"@media (min-width: 900px)\": {\n      marginBottom: \"24px\",\n    },\n    \"@media (min-width: 1200px)\": {\n      \"& .MuiRating-icon\": {\n        fontSize: \"46px\",\n      },\n    },\n    \"@media (min-width: 2100px)\": {\n      \"& .MuiRating-icon\": {\n        fontSize: \"52px\",\n      },\n    },\n  },\n  normalContainer: {\n    padding: \"10px\",\n  },\n};\n","import React, { FC } from \"react\";\nimport { IСoncreteFilm } from \"../../models/film\";\nimport { List, ListItem, ListItemText } from \"@mui/material\";\nimport { styles } from \"../../styles/filmSx\";\n\ninterface FilmPageListProps {\n  film: IСoncreteFilm;\n}\n\nconst FilmPageList: FC<FilmPageListProps> = ({ film }) => {\n  return (\n    <List sx={styles.list}>\n      <ListItem disableGutters secondaryAction={film.Year}>\n        <ListItemText>Year</ListItemText>\n      </ListItem>\n      <ListItem disableGutters secondaryAction={film.Country}>\n        <ListItemText>Country</ListItemText>\n      </ListItem>\n      <ListItem className=\"genre\" disableGutters secondaryAction={film.Genre}>\n        <ListItemText>Genre</ListItemText>\n      </ListItem>\n      <ListItem disableGutters secondaryAction={film.Runtime}>\n        <ListItemText>Runtime</ListItemText>\n      </ListItem>\n      <ListItem disableGutters secondaryAction={film.Director}>\n        <ListItemText>Director</ListItemText>\n      </ListItem>\n      <ListItem className=\"actors\" disableGutters secondaryAction={film.Actors}>\n        <ListItemText>Actors</ListItemText>\n      </ListItem>\n      <ListItem disableGutters secondaryAction={film.imdbRating}>\n        <ListItemText>IMDb Rating</ListItemText>\n      </ListItem>\n    </List>\n  );\n};\n\nexport default FilmPageList;\n","import React, { FC } from \"react\";\nimport { Box, Rating, Typography } from \"@mui/material\";\nimport { IСoncreteFilm } from \"../../models/film\";\nimport { styles } from \"../../styles/filmSx\";\n\ninterface FilmPageHeaderProps {\n  film: IСoncreteFilm;\n  handleRatingChange: (_: any, value: number | null) => void;\n}\n\nconst FilmPageHeader: FC<FilmPageHeaderProps> = ({\n  film,\n  handleRatingChange,\n}) => {\n  return (\n    <Box>\n      {film.hasOwnProperty(\"rating\") && (\n        <Box sx={styles.ratingBox}>\n          <Rating onChange={handleRatingChange} value={film.rating} />\n        </Box>\n      )}\n      <Typography variant=\"h2\">{film.Title}</Typography>\n    </Box>\n  );\n};\n\nexport default FilmPageHeader;\n","import React, { FC } from \"react\";\nimport { CircularProgress, Grid } from \"@mui/material\";\n\nconst Loader: FC = () => {\n  return (\n    <Grid container alignItems=\"center\" justifyContent=\"center\" flexGrow={1}>\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default Loader;\n","import React, { FC, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Box, Grid, Paper } from \"@mui/material\";\nimport Image from \"material-ui-image\";\nimport { useActions } from \"../hooks/useAction\";\nimport { useTypedSelector } from \"../hooks/useTyped\";\nimport { useClasses } from \"../styles/classes\";\nimport { IСoncreteFilm } from \"../models/film\";\nimport FilmPageList from \"../components/FilmPage/FilmPageList\";\nimport FilmPageHeader from \"../components/FilmPage/FilmPageHeader\";\nimport Loader from \"../components/Loader\";\nimport { styles } from \"../styles/filmSx\";\n\nconst Film: FC = () => {\n  const { film, films, ratedFilms, loader } = useTypedSelector(\n    (state) => state.film\n  );\n\n  const { fetchFilm, setFilm, setFilmRating, setLoader } = useActions();\n\n  const { imdbId } = useParams<{ imdbId: string }>();\n\n  useEffect(() => {\n    if (!film.imdbID) {\n      fetchFilm(imdbId, ratedFilms);\n    }\n\n    return () => {\n      setFilm({} as IСoncreteFilm);\n      setLoader(true);\n    };\n    /* eslint-disable */\n  }, []);\n\n  const handleRatingChange = (_: any, value: number | null) => {\n    setFilm({ ...film, rating: value });\n\n    setFilmRating(films, ratedFilms, film.imdbID, value);\n  };\n\n  const isMedium = useMediaQuery(\"(min-width: 414px)\");\n  const isLarge = useMediaQuery(\"(min-width: 600px)\");\n\n  const classes = useClasses();\n\n  if (loader) {\n    return <Loader />;\n  }\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid\n        container\n        direction=\"row\"\n        className={classes.maxWidth}\n        sx={isMedium ? styles.normalContainer : undefined}\n      >\n        <Grid\n          item\n          xs={isMedium ? 6 : 12}\n          sm={5}\n          md={4}\n          lg={3}\n          sx={{ flexDirection: \"column\" }}\n        >\n          <Image\n            src={film.Poster}\n            alt={film.Title}\n            style={{ paddingTop: 0 }}\n            imageStyle={isMedium ? styles.image : styles.mobileImage}\n          />\n          {(!isMedium || isLarge) && (\n            <Box sx={styles.content}>\n              {(!isMedium || !isLarge) && (\n                <FilmPageHeader\n                  film={film}\n                  handleRatingChange={handleRatingChange}\n                />\n              )}\n              <FilmPageList film={film} />\n            </Box>\n          )}\n        </Grid>\n        {isMedium && !isLarge && (\n          <Grid item xs={6}>\n            <FilmPageList film={film} />\n          </Grid>\n        )}\n        <Grid\n          item\n          xs={12}\n          sm={7}\n          md={8}\n          lg={9}\n          sx={{\n            flexDirection: \"column\",\n            \"@media (min-width: 600px)\": {\n              padding: \"0 10px\",\n            },\n            \"@media (min-width: 900px)\": {\n              padding: \"0 36px\",\n            },\n            \"@media (min-width: 1200px)\": {\n              padding: \"0 40px\",\n            },\n          }}\n        >\n          <Box sx={styles.content}>\n            {isMedium && (\n              <FilmPageHeader\n                film={film}\n                handleRatingChange={handleRatingChange}\n              />\n            )}\n            <Paper elevation={0} sx={styles.plot}>\n              {film.Plot}\n            </Paper>\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Film;\n","export const styles = {\n  searchBar: {\n    backgroundColor: \"#D4ECDD\",\n    borderBottomLeftRadius: \"12px\",\n    borderBottomRightRadius: \"12px\",\n    paddingTop: \"30px !important\",\n    \"@media (min-width: 500px)\": {\n      marginBottom: \"30px\",\n    },\n    \"@media (min-width: 1200px)\": {\n      paddingTop: \"80px !important\",\n    },\n    \"@media (min-width: 1800px)\": {\n      marginBottom: \"40px\",\n    },\n    \"@media (min-width: 2100px)\": {\n      marginBottom: \"50px\",\n    },\n  },\n  titleInput: {\n    \"& .MuiFilledInput-root\": {\n      borderTopLeftRadius: \"12px\",\n      borderTopRightRadius: \"12px\",\n      \"@media (min-width: 600px)\": {\n        borderTopRightRadius: 0,\n      },\n    },\n  },\n  yearInput: {\n    \"@media (min-width: 600px)\": {\n      \"& .MuiFilledInput-root\": {\n        borderLeft: \"solid 1px rgba(0, 0, 0, 0.42)\",\n        borderTopRightRadius: \"12px\",\n      },\n    },\n    \"@media (min-width: 900px)\": {\n      \"& .MuiFilledInput-root\": {\n        borderTopRightRadius: 0,\n      },\n    },\n  },\n  buttonGroup: {\n    height: \"56px\",\n    width: \"100%\",\n    \"& .MuiButton-root\": {\n      borderRadius: 0,\n      color: \"#D4ECDD !important\",\n      flex: 1,\n    },\n  },\n  searchBtn: {\n    borderBottomLeftRadius: \"12px !important\",\n    \"@media (min-width: 900px)\": {\n      borderBottomLeftRadius: \"0 !important\",\n    },\n  },\n  resetBtn: { borderBottomRightRadius: \"12px !important\" },\n};\n","import React, { FC, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport { DatePicker } from \"@mui/lab\";\nimport { useActions } from \"../hooks/useAction\";\nimport { useClasses } from \"../styles/classes\";\nimport { styles } from \"../styles/searchSx\";\n\ninterface SearchProps {\n  handleSearch: (title: string, year: Date | null) => void;\n}\n\nconst Search: FC<SearchProps> = ({ handleSearch }) => {\n  const { setFilms, setTotalResults, setBadRequest, setLoader } = useActions();\n\n  const [title, setTitle] = useState(\"\");\n  const [year, setYear] = useState<Date | null>(null);\n\n  const classes = useClasses();\n\n  const handleReset = () => {\n    setTitle(\"\");\n    setYear(null);\n\n    setFilms([]);\n    setTotalResults(0);\n    setBadRequest(false);\n    setLoader(true);\n  };\n\n  return (\n    <Grid\n      className={classes.wrapper}\n      container\n      justifyContent=\"center\"\n      sx={styles.searchBar}\n    >\n      <Grid\n        className={classes.maxWidth}\n        container\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Grid item xs={12} lg={2}>\n          <Typography variant=\"h1\">MOOVY</Typography>\n        </Grid>\n        <Grid item xs={12} sm={8} md={7} lg={5}>\n          <TextField\n            variant=\"filled\"\n            color=\"success\"\n            label=\"Title\"\n            placeholder=\"Type in film title\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            sx={styles.titleInput}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} md={2}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              views={[\"year\"]}\n              maxDate={new Date()}\n              label=\"Year\"\n              onChange={(value) => setYear(value)}\n              value={year}\n              renderInput={(params) => (\n                <TextField\n                  variant=\"filled\"\n                  color=\"success\"\n                  sx={styles.yearInput}\n                  {...params}\n                />\n              )}\n            />\n          </LocalizationProvider>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <ButtonGroup sx={styles.buttonGroup}>\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              sx={styles.searchBtn}\n              onClick={() => handleSearch(title, year)}\n            >\n              Search\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              sx={styles.resetBtn}\n              onClick={handleReset}\n            >\n              Reset\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Search;\n","export const styles = {\n  card: {\n    display: \"flex\",\n    borderRadius: \"12px\",\n    marginBottom: 1,\n    \"@media (min-width: 1200px)\": {\n      marginBottom: 0,\n    },\n    maxHeight: \"300px\",\n  },\n  filmImage: {\n    cursor: \"pointer\",\n    flex: \"1 0 130px\",\n    height: 200,\n    width: 130,\n    maxWidth: 130,\n    \"@media (min-width: 320px)\": {\n      flex: \"1 0 138px\",\n      width: 138,\n      maxWidth: 138,\n    },\n    \"@media (min-width: 900px)\": {\n      flex: \"1 0 160px\",\n      height: 230,\n      width: 160,\n      maxWidth: 160,\n    },\n    \"@media (min-width: 1200px)\": {\n      flex: \"1 0 180px\",\n      height: 250,\n      width: 180,\n      maxWidth: 180,\n    },\n    \"@media (min-width: 1800px)\": {\n      flex: \"1 0 210px\",\n      height: 280,\n      width: 210,\n      maxWidth: 210,\n    },\n    \"@media (min-width: 2100px)\": {\n      flex: \"1 0 220px\",\n      height: 300,\n      width: 220,\n      maxWidth: 220,\n    },\n  },\n  content: {\n    flex: \"1 0 auto\",\n    padding: \"12px 12px 0 12px\",\n    \"& .MuiTypography-root\": {\n      overflow: \"auto\",\n      maxHeight: 118,\n      \"@media (min-width: 1200px)\": {\n        maxHeight: 140,\n      },\n      \"@media (min-width: 1800px)\": {\n        maxHeight: 160,\n      },\n      \"@media (min-width: 2100px)\": {\n        maxHeight: 190,\n      },\n    },\n    \"@media (min-width: 320px)\": {\n      padding: \"16px 16px 0 16px\",\n    },\n  },\n  contentWithGenre: {\n    flex: \"1 0 auto\",\n    padding: \"12px 12px 0 12px\",\n    \"& .MuiTypography-root\": {\n      overflow: \"auto\",\n      maxHeight: 98,\n      \"@media (min-width: 375px)\": {\n        maxHeight: 90,\n      },\n      \"@media (min-width: 1200px)\": {\n        maxHeight: 130,\n      },\n      \"@media (min-width: 1800px)\": {\n        maxHeight: 150,\n      },\n      \"@media (min-width: 2100px)\": {\n        maxHeight: 170,\n      },\n    },\n    \"@media (min-width: 320px)\": {\n      padding: \"16px 16px 0 16px\",\n    },\n  },\n  filmName: {\n    cursor: \"pointer\",\n    fontSize: 21,\n    \"@media (min-width: 375px)\": {\n      fontSize: 23,\n    },\n    \"@media (min-width: 414px)\": {\n      fontSize: 25,\n    },\n    \"@media (min-width: 900px)\": {\n      fontSize: 27,\n    },\n    \"@media (min-width: 1200px)\": {\n      fontSize: 29,\n    },\n    \"@media (min-width: 1800px)\": {\n      fontSize: 36,\n    },\n  },\n  filmYear: {\n    marginTop: \"1px\",\n    \"@media (min-width: 320px)\": {\n      marginTop: \"3px\",\n    },\n    \"@media (min-width: 375px)\": {\n      marginTop: \"6px\",\n    },\n    \"@media (min-width: 414px)\": {\n      fontSize: \"18px\",\n    },\n    \"@media (min-width: 900px)\": {\n      fontSize: \"19px\",\n    },\n    \"@media (min-width: 1200px)\": {\n      fontSize: \"20px\",\n    },\n    \"@media (min-width: 1800px)\": {\n      fontSize: \"23px\",\n    },\n    \"@media (min-width: 2100px)\": {\n      fontSize: \"24px\",\n    },\n  },\n  filmGenre: {\n    lineHeight: 1.4,\n  },\n  ratingBox: {\n    paddingBottom: \"6px\",\n    paddingLeft: \"10px\",\n    \"@media (min-width: 320px)\": {\n      paddingLeft: \"12px\",\n    },\n  },\n};\n","import React, { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Rating from \"@mui/material/Rating\";\nimport { useTypedSelector } from \"../hooks/useTyped\";\nimport { useActions } from \"../hooks/useAction\";\nimport { IFilm, IСoncreteFilm } from \"../models/film\";\nimport { styles } from \"../styles/filmCardSx\";\n\ninterface FilmCardProps {\n  film: IFilm | IСoncreteFilm;\n}\n\nconst FilmCard: FC<FilmCardProps> = ({ film }) => {\n  const { films, ratedFilms } = useTypedSelector((state) => state.film);\n\n  const { setFilmRating, fetchFilm } = useActions();\n\n  const isMedium = useMediaQuery(\"(min-width: 375px)\");\n  const isLarge = useMediaQuery(\"(min-width: 1200px)\");\n\n  const defineRatingSize = () => {\n    if (isMedium && !isLarge) {\n      return \"medium\";\n    } else if (isLarge) {\n      return \"large\";\n    } else {\n      return \"small\";\n    }\n  };\n\n  const history = useHistory();\n\n  const handleClick = async () => {\n    await fetchFilm(film.imdbID, ratedFilms);\n\n    history.push(`/film/${film.imdbID}`);\n  };\n\n  return (\n    <Card sx={styles.card}>\n      <CardMedia\n        component=\"img\"\n        image={film.Poster}\n        alt={film.Title}\n        onClick={handleClick}\n        sx={styles.filmImage}\n      />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          overflow: \"auto\",\n        }}\n      >\n        <CardContent\n          sx={\n            film.hasOwnProperty(\"Genre\")\n              ? styles.contentWithGenre\n              : styles.content\n          }\n        >\n          <Typography variant=\"h3\" sx={styles.filmName} onClick={handleClick}>\n            {film.Title}\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"div\" sx={styles.filmYear}>\n            {film.Year}\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"div\" sx={styles.filmGenre}>\n            {film.hasOwnProperty(\"Genre\") ? (film as IСoncreteFilm).Genre : \"\"}\n          </Typography>\n        </CardContent>\n        <Box sx={styles.ratingBox}>\n          <Rating\n            size={defineRatingSize()}\n            onChange={(_, value) =>\n              setFilmRating(films, ratedFilms, film.imdbID, value)\n            }\n            value={film.rating}\n          />\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nexport default FilmCard;\n","export const styles = {\n  grid: {\n    padding: \"0 10px\",\n    \"& .MuiGrid-root\": {\n      maxWidth: \"100%\",\n    },\n    \"@media (min-width: 414px)\": {\n      padding: \"0 14px\",\n    },\n    \"@media (min-width: 500px)\": {\n      padding: 0,\n    },\n  },\n  loader: {\n    marginTop: \"10px\",\n    \"@media (min-width: 500px)\": {\n      marginTop: \"-15px\",\n      marginBottom: \"30px\",\n    },\n  },\n};\n","import React, { FC } from \"react\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Box, Grid } from \"@mui/material\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport FilmCard from \"./FilmCard\";\nimport { IFilm, IСoncreteFilm } from \"../models/film\";\nimport { useClasses } from \"../styles/classes\";\nimport { styles } from \"../styles/filmListSx\";\n\ninterface FilmListProps {\n  films: IFilm[] | IСoncreteFilm[];\n  film: IСoncreteFilm;\n  loader: boolean;\n}\n\nconst FilmList: FC<FilmListProps> = ({ films, film, loader }) => {\n  const isMedium = useMediaQuery(\"(min-width:900px)\");\n  const isLarge = useMediaQuery(\"(min-width:1800px)\");\n\n  const classes = useClasses();\n\n  return (\n    <>\n      {!loader && !film.imdbID && (\n        <Box sx={styles.loader}>\n          <LinearProgress color=\"success\" />\n        </Box>\n      )}\n      <Grid className={classes.wrapper} container justifyContent=\"center\">\n        <Grid\n          className={isMedium ? classes.maxWidth : undefined}\n          container\n          direction={isMedium ? \"row\" : \"column\"}\n          spacing={isLarge ? 3 : 2}\n          sx={styles.grid}\n        >\n          {films.map((film) => (\n            <Grid item key={Math.random()} md={6}>\n              <FilmCard film={film} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default FilmList;\n","import React, { FC } from \"react\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Grid, Pagination } from \"@mui/material\";\n\ninterface PaginationProps {\n  page: number;\n  totalResults: number;\n  handlePaginationClick: (_: React.ChangeEvent<unknown>, value: number) => void;\n}\n\nconst ListPagination: FC<PaginationProps> = ({\n  page,\n  totalResults,\n  handlePaginationClick,\n}) => {\n  const isSmall = useMediaQuery(\"(min-width: 375px)\");\n  const isMedium = useMediaQuery(\"(min-width: 600px)\");\n  const isLarge = useMediaQuery(\"(min-width: 1000px)\");\n\n  const definePaginationSize = () => {\n    if (isSmall && !isMedium) {\n      return \"medium\";\n    } else if (isMedium) {\n      return \"large\";\n    } else {\n      return \"small\";\n    }\n  };\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Pagination\n        count={Math.ceil(totalResults / 10)}\n        size={definePaginationSize()}\n        boundaryCount={isLarge ? 3 : 1}\n        onChange={handlePaginationClick}\n        page={page}\n      />\n    </Grid>\n  );\n};\n\nexport default ListPagination;\n","import React, { FC } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { Grid, Typography } from \"@mui/material\";\nimport MovieIcon from \"@mui/icons-material/Movie\";\nimport SearchOffIcon from \"@mui/icons-material/SearchOff\";\n\ninterface ListStatesProps {\n  badRequest: boolean;\n}\n\nconst ListStates: FC<ListStatesProps> = ({ badRequest }) => {\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{ flexGrow: 1 }}\n    >\n      <Box display=\"flex\" flexDirection=\"column\">\n        {badRequest ? (\n          <SearchOffIcon\n            sx={{\n              fontSize: \"120px\",\n              margin: \"0 auto\",\n              \"@media (min-width: 900px)\": {\n                fontSize: \"150px\",\n              },\n            }}\n          />\n        ) : (\n          <MovieIcon\n            sx={{\n              fontSize: \"120px\",\n              margin: \"0 auto\",\n              \"@media (min-width: 900px)\": {\n                fontSize: \"150px\",\n              },\n            }}\n          />\n        )}\n        <Typography variant=\"h2\">\n          {badRequest ? \"No results found\" : \"Start searching\"}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default ListStates;\n","import React, { FC, useEffect } from \"react\";\nimport { useTypedSelector } from \"../hooks/useTyped\";\nimport { useActions } from \"../hooks/useAction\";\nimport Search from \"../components/Search\";\nimport FilmList from \"../components/FilmList\";\nimport ListPagination from \"../components/ListPagination\";\nimport ListStates from \"../components/ListStates\";\nimport Loader from \"../components/Loader\";\n\nconst Home: FC = () => {\n  const { films, totalResults, ratedFilms, badRequest, film, loader } =\n    useTypedSelector((state) => state.film);\n  const { title, year, page } = useTypedSelector((state) => state.search);\n\n  const { fetchFilms, setSearchState, setPage, setLoader } = useActions();\n\n  const handleSearch = (title: string, year: Date | null) => {\n    setLoader(false);\n\n    setSearchState(title, year?.getFullYear().toString());\n\n    fetchFilms(title, year?.getFullYear().toString(), page, ratedFilms);\n  };\n\n  const handlePaginationClick = (\n    _: React.ChangeEvent<unknown>,\n    value: number\n  ) => {\n    if (page !== value) {\n      fetchFilms(title, year, value, ratedFilms);\n\n      setPage(value);\n    }\n  };\n\n  const returnList = () => {\n    if (loader && !badRequest && films.length === 0) {\n      return <ListStates badRequest={false} />;\n    } else if (badRequest && films.length === 0) {\n      return <ListStates badRequest={true} />;\n    } else if (!loader && !badRequest && films.length === 0) {\n      return <Loader />;\n    }\n\n    return <FilmList films={films} film={film} loader={loader} />;\n  };\n\n  useEffect(() => {\n    setLoader(true);\n    /* eslint-disable */\n  }, []);\n\n  return (\n    <>\n      <Search handleSearch={handleSearch} />\n\n      {returnList()}\n      {totalResults > 10 && (\n        <ListPagination\n          page={page}\n          totalResults={totalResults}\n          handlePaginationClick={handlePaginationClick}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","export const styles = {\n  formControl: {\n    width: \"100% !important\",\n    padding: \"0 10px\",\n    \"& #genre-label\": {\n      marginLeft: \"10px\",\n    },\n    \"@media (min-width: 500px)\": {\n      marginTop: \"12px\",\n      marginBottom: \"18px\",\n      padding: 0,\n      \"& #genre-label\": {\n        marginLeft: 0,\n      },\n    },\n    \"@media (min-width: 1000px)\": {\n      marginTop: \"26px\",\n      marginBottom: \"32px\",\n    },\n\n    \"@media (min-width: 1500px)\": {\n      marginTop: \"30px\",\n      marginBottom: \"36px\",\n    },\n    \"@media (min-width: 1800px)\": {\n      marginTop: \"40px\",\n      marginBottom: \"44px\",\n    },\n    \"@media (min-width: 2500px)\": {\n      marginTop: \"46px\",\n      marginBottom: \"50px\",\n    },\n  },\n};\n","import React, { FC, useState } from \"react\";\nimport { useClasses } from \"../styles/classes\";\nimport { Grid } from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { styles } from \"../styles/mySelectSx\";\n\ninterface MySelectProps {\n  genres: string[];\n  handleSelectChange: (page: string) => void;\n}\n\nconst MySelect: FC<MySelectProps> = ({ genres, handleSelectChange }) => {\n  const [genre, setGenre] = useState(\"\");\n\n  const classes = useClasses();\n\n  const handleChange = (e: SelectChangeEvent<string>) => {\n    setGenre(e.target.value);\n\n    handleSelectChange(e.target.value);\n  };\n\n  return (\n    <Grid className={classes.wrapper} container justifyContent=\"center\">\n      <Grid className={classes.maxWidth} container>\n        <FormControl sx={styles.formControl}>\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\n          <Select\n            labelId=\"genre-label\"\n            label=\"Genre\"\n            onChange={handleChange}\n            value={genre}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {genres.map((g) => (\n              <MenuItem key={g} value={g}>\n                {g}\n              </MenuItem>\n            ))}\n          </Select>\n          <FormHelperText>Select film genre</FormHelperText>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MySelect;\n","import React, { FC, useEffect, useRef } from \"react\";\nimport { useTypedSelector } from \"../hooks/useTyped\";\nimport { useActions } from \"../hooks/useAction\";\nimport FilmService from \"../services/film\";\nimport { IСoncreteFilm } from \"../models/film\";\nimport MySelect from \"../components/MySelect\";\nimport FilmList from \"../components/FilmList\";\n\nconst Rated: FC = () => {\n  const { ratedFilms, genres, lastRatedFilm, films, film, loader } =\n    useTypedSelector((state) => state.film);\n\n  const { setCurrentGenres, setRatedFilms, setLastRatedFilm, setFilms } =\n    useActions();\n\n  const memorizedFilms = useRef(ratedFilms);\n\n  const updatedMemorizedFilms = useRef<IСoncreteFilm[]>([]);\n\n  useEffect(() => {\n    if (lastRatedFilm) {\n      if (!lastRatedFilm.rating) {\n        updatedMemorizedFilms.current = memorizedFilms.current.filter(\n          (f) => f.imdbID !== lastRatedFilm.imdbID\n        );\n\n        return;\n      }\n\n      updatedMemorizedFilms.current = memorizedFilms.current.map((f) => {\n        if (f.imdbID === lastRatedFilm.imdbID) {\n          return lastRatedFilm;\n        } else {\n          return f;\n        }\n      });\n\n      return;\n    }\n\n    updatedMemorizedFilms.current = memorizedFilms.current;\n  }, [lastRatedFilm]);\n\n  useEffect(() => {\n    setLastRatedFilm({} as IСoncreteFilm);\n    setCurrentGenres(ratedFilms);\n\n    return () => {\n      setRatedFilms(updatedMemorizedFilms.current);\n      setFilms(FilmService.syncFilms(films, updatedMemorizedFilms.current));\n      setLastRatedFilm({} as IСoncreteFilm);\n    };\n    /* eslint-disable */\n  }, []);\n\n  const handleSelectChange = (genre: string) => {\n    if (genre) {\n      const newFilmsArr = updatedMemorizedFilms.current.filter((film) => {\n        if (film.Genre.split(\", \").includes(genre)) {\n          return film;\n        }\n      });\n\n      return setRatedFilms(newFilmsArr);\n    }\n\n    return setRatedFilms(updatedMemorizedFilms.current);\n  };\n\n  return (\n    <>\n      <MySelect genres={genres} handleSelectChange={handleSelectChange} />\n      <FilmList films={ratedFilms} film={film} loader={loader} />\n    </>\n  );\n};\n\nexport default Rated;\n","import React, { FC } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { RouteNames, routes } from \"../routes\";\n\nconst AppRouter: FC = () => {\n  return (\n    <Switch>\n      {routes.map((route) => (\n        <Route key={route.path} {...route} />\n      ))}\n      <Redirect to={RouteNames.HOME} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React, { FC, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./theme/theme\";\nimport MyAppBar from \"./components/MyAppBar\";\nimport AppRouter from \"./components/AppRouter\";\n\nconst App: FC = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <MyAppBar />\n        <AppRouter />\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./store\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}